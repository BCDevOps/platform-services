# openshift.withProject(env.PROJECT_NAME)
apiVersion: v1
kind: BuildConfig
metadata:
  name: "rocketchat-pipeline"
spec:
  strategy:
    jenkinsPipelineStrategy:
      jenkinsfile: |-
        pipeline {
            agent any
            stages {
                stage('Input') {
                    steps {
                        script {
                            def userInput = input(
                                id: 'userInput', message: 'Enter name of environment to deploy and prefix of your environment',
                                parameters: [
                                    choice(choices: ['dev', 'prod', 'test'], description: '', name: 'environ'),
                                    string(defaultValue: 'a5bcde', description: '', name: 'prefix', trim: false),
                                ])
                            project = userInput.prefix+"-"+userInput.environ
                            environment = userInput.environ
                            echo("Deploying to Rocket Chat to: ${project}")
                        }
                    }
                }
                stage('Checkout') {
                    steps {
                        git branch: 'master', url: 'https://github.com/BCDevOps/platform-services'
                    }
                }
                stage('Clean') {
                    when {
                        
                    }
                    steps {
                        sh "oc process -n ${project} -f apps/rocketchat/template-rocketchat-mongodb.yaml --param-file=apps/rocketchat/${environment}.env | oc delete -f -"
                        sh "oc delete -n ${project} pvc -l name=mongodb"
                    }
                }
                stage('Deploy') {
                    steps {
                        sh "oc process -n ${project} -f apps/rocketchat/template-rocketchat-mongodb.yaml --param-file=apps/rocketchat/${environment}.env | oc create -f -"
                    }    
                }
                stage('Config') {
                    steps {
                        script {
                            sh channel-creator.sh admin-user-name admin-password
                         }
                    }
                }
            }
        }


# add about delete storage too?
# add step delete just rocketchat keep mongo?
# add update image version with new env file, ask for env file
# ask for user password for shell script step
# trigger when push