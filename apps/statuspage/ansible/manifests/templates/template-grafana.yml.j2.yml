apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: {{ grafana_service_name }}
    name: {{ grafana_service_name }}
  spec:
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: {{ grafana_service_name }}
      deploymentconfig: {{ grafana_service_name }}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: {{ grafana_service_name }}
    name: {{ grafana_service_name }}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: {{ grafana_service_name }}
      deploymentconfig: {{ grafana_service_name }}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: {{ grafana_service_name }}
          deploymentconfig: {{ grafana_service_name }}
      spec:
        containers:
        - image: grafana/grafana:{{ grafana_version }}
          imagePullPolicy: IfNotPresent
          name: {{ grafana_service_name }}
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          env: 
            - name: GF_DATABASE_TYPE
              value: {{ grafana_db_type }}
            - name: GF_DATABASE_HOST
              value: {{ grafana_database_service }}
            - name: GF_DATABASE_NAME
              value: {{ patroni_database_name }}
            - name: GF_DATABASE_USER
              value: {{ patroni_superuser_username }}
            - name: GF_DATABASE_PASSWORD
              value: {{ patroni_superuser_password }}
            - name: GF_INSTALL_PLUGINS
              value: {{ grafana_sysdig_plugin_source }}
            - name: GF_AUTH_GENERIC_OAUTH_ENABLED
              value: "{{ grafana_oauth_generic_oauth_enabled | lower }}"
            - name: GF_AUTH_GENERIC_OAUTH_NAME
              value: {{ grafana_auth_oauth_name }}
            - name: GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP
              value: "{{ grafana_auth_oauth_allow_signup | lower }}"
            - name: GF_AUTH_GENERIC_OAUTH_CLIENT_ID
              value: {{ grafana_auth_oauth_client_id }}
            - name: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
              value: {{ grafana_auth_oauth_client_secret }}
            - name: GF_SERVER_ROOT_URL
              value: https://{{ route }}
            - name: GF_AUTH_GENERIC_OAUTH_AUTH_URL
              value: >-
                {{ grafana_auth_oauth_auth_url }}
            - name: GF_AUTH_GENERIC_OAUTH_TOKEN_URL
              value: >-
                {{ grafana_auth_oauth_token_url }}
            - name: GF_AUTH_GENERIC_OAUTH_API_URL
              value: >-
                {{ grafana_auth_oauth_api_url }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/provisioning/dashboards/
            name: {{ grafana_service_name }}-dashboard-providers
          - mountPath: /etc/grafana/provisioning/datasources/
            name: {{ grafana_service_name }}-datasources
          - mountPath: /var/lib/grafana/dashboards/
            name: {{ grafana_service_name }}-dashboards
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: {{ grafana_service_name }}-dashboard-providers
          name: {{ grafana_service_name }}-dashboard-providers
        - configMap:
            defaultMode: 420
            name: {{ grafana_service_name }}-datasources
          name: {{ grafana_service_name }}-datasources
        - configMap:
            defaultMode: 420
            name: {{ grafana_service_name }}-dashboards
          name: {{ grafana_service_name }}-dashboards
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: {{ grafana_service_name }}
    name: {{ grafana_service_name }}
  spec:
    host: {{ route }}
    port:
      targetPort: 3000-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: {{ grafana_service_name }}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  data:
    dashboard.yml: |-
      apiVersion: 1
      providers:
        # <string> provider name
      - name: 'default'
        # <int> org id. will default to orgId 1 if not specified
        orgId: 1
        # <string, required> name of the dashboard folder. Required
        folder: ''
        # <string> folder UID. will be automatically generated if not specified
        folderUid: ''
        # <string, required> provider type. Required
        type: file
        # <bool> disable dashboard deletion
        disableDeletion: false
        # <bool> enable dashboard editing
        editable: true
        # <int> how often Grafana will scan for changed dashboards
        updateIntervalSeconds: 10  
        options:
          # <string, required> path to dashboard files on disk. Required
          path: /var/lib/grafana/dashboards
  kind: ConfigMap
  metadata:
    labels:
        app: {{ grafana_service_name }}
    name:  {{ grafana_service_name }}-dashboard-providers
- apiVersion: v1
  data:
    datasource.yml: |-
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          access: proxy
          url: http://{{ prometheus_service_name }}:9090
          orgId: 1 
          isDefault: true
          version: 1  
          editable: true
        - name: Sysdig
          type: sysdig
          url: https://app.sysdigcloud.com/
          access: proxy
          jsonData: 
            apiToken: {{ grafana_sysdig_apiToken }}
          orgId: 1 
          editable: true
          version: 1
  kind: ConfigMap
  metadata:
    labels:
      app: {{ grafana_service_name }}
    name: {{ grafana_service_name }}-datasources