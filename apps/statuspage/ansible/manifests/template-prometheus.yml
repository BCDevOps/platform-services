apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: prometheus
    name: prometheus
  data:
    alerts: |
      {}
      
    prometheus.yml: |
      global:
        evaluation_interval: 1m
        scrape_interval: 1m
        scrape_timeout: 10s
      rule_files:
      - /etc/config/rules
      - /etc/config/alerts
      scrape_configs:
      - job_name: prometheus
        static_configs:
        - targets:
          - localhost:9090
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
        - role: pod
          namespaces:
              names:
                - c81e6h-dev
        relabel_configs:
        - action: keep
          regex: true
          source_labels:
          - __meta_kubernetes_pod_annotation_prometheus_io_scrape
        - action: replace
          regex: (.+)
          source_labels:
          - __meta_kubernetes_pod_annotation_prometheus_io_path
          target_label: __metrics_path__
        - action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          source_labels:
          - __address__
          - __meta_kubernetes_pod_annotation_prometheus_io_port
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: kubernetes_namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: kubernetes_pod_name
      
    rules: |
      {}
# - apiVersion: v1
#   kind: PersistentVolumeClaim
#   metadata:
#     labels:
#       app: prometheus
#     name: prometheus
#   spec:
#     accessModes:
#       - ReadWriteOnce
#     resources:
#       requests:
#         storage: 5Gi
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: prometheus
    name: prometheus
  spec:
    ports:
      - name: 9090-tcp
        port: 9090
        protocol: TCP
        targetPort: 9090
    selector:
      app: prometheus
    type: "ClusterIP"
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: prometheus
    name: prometheus
  spec:
    selector:
      matchLabels:
        app: prometheus
    replicas: 1
    template:
      metadata:
        labels:
          app: prometheus
      spec:
        serviceAccountName: default
        containers:
          - name: prometheus-configmap-reload
            image: "jimmidyson/configmap-reload:v0.2.2"
            imagePullPolicy: "IfNotPresent"
            args:
              - --volume-dir=/etc/config
              - --webhook-url=http://127.0.0.1:9090/-/reload
            resources:
              {}
            volumeMounts:
              - name: config-volume
                mountPath: /etc/config
                readOnly: true
          - name: prometheus-stewartshea-prometheus
            image: "prom/prometheus:v2.9.2"
            imagePullPolicy: "IfNotPresent"
            args:
              - --config.file=/etc/config/prometheus.yml
              - --storage.tsdb.path=/data
              - --web.console.libraries=/etc/prometheus/console_libraries
              - --web.console.templates=/etc/prometheus/consoles
              - --web.enable-lifecycle
            ports:
              - containerPort: 9090
            readinessProbe:
              httpGet:
                path: /-/ready
                port: 9090
              initialDelaySeconds: 30
              timeoutSeconds: 30
            livenessProbe:
              httpGet:
                path: /-/healthy
                port: 9090
              initialDelaySeconds: 30
              timeoutSeconds: 30
            resources:
              {}
            volumeMounts:
              - name: config-volume
                mountPath: /etc/config
              - name: storage-volume
                mountPath: /data
                subPath: ""
        terminationGracePeriodSeconds: 300
        volumes:
          - name: config-volume
            configMap:
              name: prometheus
          # - name: storage-volume
          #   persistentVolumeClaim:
          #     claimName: prometheus
          - name: storage-volume
            emptyDir: {}
- apiVersion: v1
  data:
    prometheus.yml: |-
      # my global config
      global:
        scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
        evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
        # scrape_timeout is set to the global default (10s).

      scrape_configs:
        - job_name: 'blackbox_tls_verify'
          metrics_path: /probe
          params:
            module: [http_2xx]  # Look for a HTTP 200 response.
          static_configs:
            - targets:
              - https://github.com/bcdevops/platform-services 
              - https://access.redhat.com/containers/
              - https://console.pathfinder.gov.bc.ca:8443
              - https://failme.pathfinder.gov.bc.ca
              - https://hawkular-metrics.pathfinder.gov.bc.ca
              - http://labs-devops-platform-workshops.lab.pathfinder.gov.bc.ca 
          relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
            - source_labels: [__param_target]
              target_label: instance
            - target_label: __address__
              replacement: blackbox-exporter:9115  # The blackbox exporter's real hostname:port.
        - job_name: 'blackbox_no_tls_verify'
          metrics_path: /probe
          params:
            module: [http_2xx__no_tls_verify]  # Look for a HTTP 200 response.
          static_configs:
            - targets:
              - https://kubernetes.default.svc.cluster.local
          relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
            - source_labels: [__param_target]
              target_label: instance
            - target_label: __address__
              replacement: blackbox-exporter:9115  # The blackbox exporter's real hostname:port.        
  kind: ConfigMap
  metadata:
    name: prometheus-config
- apiVersion: route.openshift.io/v1 ## Remove this for production and use portforward 
  kind: Route
  metadata:
    labels:
      app: prometheus
    name: prometheus
  spec:
    port:
      targetPort: 9090-tcp
    to:
      kind: Service
      name: prometheus
      weight: 100
    wildcardPolicy: None