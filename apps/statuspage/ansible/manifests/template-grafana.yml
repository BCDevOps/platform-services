apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: grafana
    name: grafana
  spec:
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: grafana
      deploymentconfig: grafana
    sessionAffinity: None
    type: ClusterIP
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: grafana
    name: grafana
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: grafana
      deploymentconfig: grafana
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: grafana
          deploymentconfig: grafana
      spec:
        containers:
        - image: grafana/grafana:latest
          imagePullPolicy: IfNotPresent
          name: grafana
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          env: 
            # LOCAL LOGGING CONFIG for LOKI / PROMTAIL
            # - name: GF_PATHS_LOGS
            #   value: /logs
            # - name: GF_LOG_MODE
            #   value: file
            # INTEGRATION WITH POSTGRESQL FOR SCALING GRAFANA
            # - name: GF_DATABASE_TYPE
            #   value: postgres
            # - name: GF_DATABASE_HOST
            #   value: patroni-master
            # - name: GF_DATABASE_NAME
            #   valueFrom:
            #     secretKeyRef:
            #       name: ${DB_SECRET}
            #       key: app-db-name
            # - name: GF_DATABASE_USER
            #   valueFrom:
            #     secretKeyRef:
            #       name: ${DB_SECRET}
            #       key: app-db-username
            # - name: GF_DATABASE_PASSWORD
            #   valueFrom:
            #     secretKeyRef:
            #       name: ${DB_SECRET}
            #       key: app-db-password
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/provisioning/dashboards/
            name: grafana-dashboard-providers
          - mountPath: /etc/grafana/provisioning/datasources/
            name: grafana-datasources
          - mountPath: /var/lib/grafana/dashboards/
            name: grafana-dashboards
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: grafana-dashboard-providers
          name: grafana-dashboard-providers
        - configMap:
            defaultMode: 420
            name: grafana-datasources
          name: grafana-datasources
        - configMap:
            defaultMode: 420
            name: grafana-dashboards
          name: grafana-dashboards
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: grafana
    name: grafana
  spec:
    host: grafana-statuspage-dev.pathfinder.gov.bc.ca
    port:
      targetPort: 3000-tcp
    to:
      kind: Service
      name: grafana
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  data:
    simple_dashboard.json: |-
      {
        "annotations": {
          "list": [
            {
              "builtIn": 1,
              "datasource": "-- Grafana --",
              "enable": true,
              "hide": true,
              "iconColor": "rgba(0, 211, 255, 1)",
              "name": "Annotations & Alerts",
              "type": "dashboard"
            }
          ]
        },
        "editable": true,
        "gnetId": null,
        "graphTooltip": 0,
        "id": 1,
        "links": [],
        "panels": [
          {
            "cacheTimeout": null,
            "colorBackground": false,
            "colorValue": false,
            "colors": [
              "#299c46",
              "rgba(237, 129, 40, 0.89)",
              "#d44a3a"
            ],
            "format": "none",
            "gauge": {
              "maxValue": 100,
              "minValue": 0,
              "show": false,
              "thresholdLabels": false,
              "thresholdMarkers": true
            },
            "gridPos": {
              "h": 9,
              "w": 12,
              "x": 0,
              "y": 0
            },
            "id": 2,
            "interval": null,
            "links": [],
            "mappingType": 1,
            "mappingTypes": [
              {
                "name": "value to text",
                "value": 1
              },
              {
                "name": "range to text",
                "value": 2
              }
            ],
            "maxDataPoints": 100,
            "nullPointMode": "connected",
            "nullText": null,
            "options": {},
            "postfix": "",
            "postfixFontSize": "50%",
            "prefix": "",
            "prefixFontSize": "50%",
            "rangeMaps": [
              {
                "from": "null",
                "text": "N/A",
                "to": "null"
              }
            ],
            "sparkline": {
              "fillColor": "rgba(31, 118, 189, 0.18)",
              "full": false,
              "lineColor": "rgb(31, 120, 193)",
              "show": false
            },
            "tableColumn": "",
            "targets": [
              {
                "expr": "sum(up)\n",
                "format": "time_series",
                "intervalFactor": 1,
                "refId": "A"
              }
            ],
            "thresholds": "",
            "timeFrom": null,
            "timeShift": null,
            "title": "Simple Panel",
            "type": "singlestat",
            "valueFontSize": "80%",
            "valueMaps": [
              {
                "op": "=",
                "text": "N/A",
                "value": "null"
              }
            ],
            "valueName": "current"
          }
        ],
        "schemaVersion": 18,
        "style": "dark",
        "tags": [],
        "templating": {
          "list": []
        },
        "time": {
          "from": "now-6h",
          "to": "now"
        },
        "timepicker": {
          "refresh_intervals": [
            "5s",
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
          ],
          "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
          ]
        },
        "timezone": "",
        "title": "Simple Dashboard",
        "uid": "ybk9TjWZk",
        "version": 1
      }
  kind: ConfigMap
  metadata:
    labels:
      app: grafana
    name: grafana-dashboards
- apiVersion: v1
  data:
    dashboard.yml: |-
      apiVersion: 1
      providers:
        # <string> provider name
      - name: 'default'
        # <int> org id. will default to orgId 1 if not specified
        orgId: 1
        # <string, required> name of the dashboard folder. Required
        folder: ''
        # <string> folder UID. will be automatically generated if not specified
        folderUid: ''
        # <string, required> provider type. Required
        type: file
        # <bool> disable dashboard deletion
        disableDeletion: false
        # <bool> enable dashboard editing
        editable: true
        # <int> how often Grafana will scan for changed dashboards
        updateIntervalSeconds: 10  
        options:
          # <string, required> path to dashboard files on disk. Required
          path: /var/lib/grafana/dashboards
  kind: ConfigMap
  metadata:
    labels:
        app: grafana
    name:  grafana-dashboard-providers
- apiVersion: v1
  data:
    datasource.yml: |-
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          access: proxy
          url: http://prometheus:9090
          orgId: 1 
          isDefault: true
          version: 1  
          editable: true
  kind: ConfigMap
  metadata:
    labels:
      app: grafana
    name: grafana-datasources