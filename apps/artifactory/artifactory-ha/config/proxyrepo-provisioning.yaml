- hosts: localhost
  connection: local
  gather_facts: no
  vars:
    artifactory_url: "{{ lookup('env', 'ARTIFACTORY_URL') }}"
    repo_endpoint: "artifactory/api/repositories"
    admin_secret: "{{ lookup('env', 'ARTIFACTORY_ADMIN') }}"
    repo_list:
      - { repo_key: 'python-remote', repo_desc: 'Remote Python Repository', remote_url: 'https://www.python.org', pkg_type: 'generic' }
      - { repo_key: 'jenkins-remote', repo_desc: 'Remote Jenkins Repository', remote_url: 'https://updates.jenkins.io/download/', pkg_type: 'generic' }
      - { repo_key: 'npm-remote', repo_desc: 'Remote NPM Repository', remote_url: 'https://registry.npmjs.org', pkg_type: 'npm' }
      - { repo_key: 'atlassian-maven-remote', repo_desc: 'Remote Atlassian Maven Repository', remote_url: 'https://maven.atlassian.com/repository/public/', pkg_type: 'maven' }
      - { repo_key: 'boundlessgeo-maven-remote', repo_desc: 'Remote BoundlessGeo Maven Repository', remote_url: 'http://repo.boundlessgeo.com/main/', pkg_type: 'maven' }
      - { repo_key: 'geosolutions-maven-remote', repo_desc: 'Remote Geo-Solutions Maven Repository', remote_url: 'http://maven.geo-solutions.it/', pkg_type: 'maven' }
      - { repo_key: 'jasperreports-maven-remote', repo_desc: 'Remote JasperReports Maven Repository', remote_url: 'http://jasperreports.sourceforge.net/maven2', pkg_type: 'maven' }
      - { repo_key: 'jaspersoftjr-maven-remote', repo_desc: 'Remote Jaspersoft JR Maven Repository', remote_url: 'http://jaspersoft.artifactoryonline.com/jaspersoft/jr-ce-releases/', pkg_type: 'maven' }
      - { repo_key: 'jaspersoftjrs-maven-remote', repo_desc: 'Remote Jaspersoft JRS Maven Repository', remote_url: 'http://jaspersoft.artifactoryonline.com/jaspersoft/jrs-ce-releases/', pkg_type: 'maven' }
      - { repo_key: 'jaspersoft3p-maven-remote', repo_desc: 'Remote Jaspersoft 3rd Party Maven Repository', remote_url: 'https://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/', pkg_type: 'maven' }
      - { repo_key: 'jcenter-maven-remote', repo_desc: 'Remote JCenter Maven Repository', remote_url: 'http://jcenter.bintray.com', pkg_type: 'maven' }
      - { repo_key: 'jfrog-maven-remote', repo_desc: 'Remote JFrog Artifactory Maven Repository', remote_url: 'https://jfrog.bintray.com/artifactory/', pkg_type: 'maven' }
      - { repo_key: 'oracle-maven-remote', repo_desc: 'Remote Oracle Maven Repository', remote_url: 'https://maven.oracle.com', pkg_type: 'maven' }
      - { repo_key: 'osgeo-maven-remote', repo_desc: 'Remote OSGeo Maven Repository', remote_url: 'http://download.osgeo.org/webdav/geotools/', pkg_type: 'maven' }
      - { repo_key: 'primefaces-maven-remote', repo_desc: 'Remote PrimeFaces Maven Repository', remote_url: 'http://repository.primefaces.org', pkg_type: 'maven' }
      - { repo_key: 'jenkinspub-maven-remote', repo_desc: 'Remote Jenkins Public Maven Repository', remote_url: 'http://repo.jenkins-ci.org/public', pkg_type: 'maven' }
      - { repo_key: 'jenkinsrel-maven-remote', repo_desc: 'Remote Jenkins Releases Maven Repository', remote_url: 'http://repo.jenkins-ci.org/releases', pkg_type: 'maven' }
      - { repo_key: 'maven-remote', repo_desc: 'Remote Maven Repository', remote_url: 'https://repo1.maven.org/maven2', pkg_type: 'maven' }
      - { repo_key: 'vivid-maven-remote', repo_desc: 'Remote Vivid Maven Repository', remote_url: 'http://mvn.vividsolutions.com/artifactory/repo', pkg_type: 'maven' }
      - { repo_key: 'windward-maven-remote', repo_desc: 'Remote Windward Maven Repository', remote_url: 'http://maven-repository.windward.net/artifactory/libs-release', pkg_type: 'maven' }
      - { repo_key: 'pypi-remote', repo_desc: 'Remote PyPi Repository', remote_url: 'https://pypi.org/', pkg_type: 'pypi' }

  tasks:
  - name: Create Remote Repos
    uri:
      url: "{{ artifactory_url }}/{{ repo_endpoint }}/{{ item.repo_key }}"
      user: "admin"
      password: "{{ admin_secret }}"
      method: PUT
      body_format: json
      headers:
        Content-type: "application/json"
      body: '{"key" : "{{ item.repo_key }}", "description" : "{{ item.repo_desc }}", "rclass" : "remote", "url" : "{{ item.remote_url }}", "packageType" : "{{ item.pkg_type }}"}'
      force_basic_auth: yes
    ignore_errors: yes
    loop: "{{ repo_list }}"
    when: action == "create"

  - name: Delete Remote Repos
    uri:
      url: "{{ artifactory_url }}/{{ repo_endpoint }}/{{ item.repo_key }}"
      user: "admin"
      password: "{{ admin_secret }}"
      method: DELETE
    ignore_errors: yes
    loop: "{{ repo_list }}"
    when: action == "delete"
