#!/bin/bash
set -Eeu
export ENABLE_REPLICATION=${ENABLE_REPLICATION:-false}
export_vars=$(cgroup-limits) ; export $export_vars

source "${CONTAINER_SCRIPTS_PATH}/common.sh"
generate_passwd_file

export PGDATA=$HOME/data/userdata
export PATRONI_POSTGRESQL_DATA_DIR=$PGDATA

mkdir -p "$PATRONI_POSTGRESQL_DATA_DIR"
chmod 700 "$PATRONI_POSTGRESQL_DATA_DIR"

cat > "$APP_DATA/patroni.yml" <<__EOF__
bootstrap:
#  post_bootstrap: /usr/share/scripts/patroni/post_init.sh
  dcs:
    postgresql:
      use_pg_rewind: true
      parameters:
        max_connections: ${POSTGRESQL_MAX_CONNECTIONS:-100}
        max_prepared_transactions: ${POSTGRESQL_MAX_PREPARED_TRANSACTIONS:-0}
        max_locks_per_transaction: ${POSTGRESQL_MAX_LOCKS_PER_TRANSACTION:-64}
  initdb:
  - auth-host: md5
  - auth-local: trust
  - encoding: UTF8
  - locale: en_US.UTF-8
  - data-checksums
  pg_hba:
  - host all all 0.0.0.0/0 md5
  - host replication ${PATRONI_REPLICATION_USERNAME} ${POD_IP}/16    md5
restapi:
  connect_address: '${POD_IP}:8008'
postgresql:
  connect_address: '${POD_IP}:5432'
  authentication:
    superuser:
      password: '${PATRONI_SUPERUSER_PASSWORD}'
    replication:
      password: '${PATRONI_REPLICATION_PASSWORD}'
__EOF__

unset PATRONI_SUPERUSER_PASSWORD PATRONI_REPLICATION_PASSWORD
export KUBERNETES_NAMESPACE=$PATRONI_KUBERNETES_NAMESPACE
export POD_NAME=$PATRONI_NAME

exec patroni "$APP_DATA/patroni.yml"
