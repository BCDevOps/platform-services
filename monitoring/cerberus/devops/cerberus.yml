---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cerberus-deployment
  namespace: openshift-bcgov-cerberus
  labels:
    app: cerberus
spec:
  replicas: 1
  selector: 
    matchLabels:
      tool: Cerberus
  template:
    metadata:
      labels:
        tool: Cerberus
    spec:
      serviceAccountName: cerberus
      containers:
        - name: cerberus
          imagePullPolicy: Always
          # NOTE: Dockerfile changes filesystem permission for monitoring output storage. otherwise we'll need to use privileged account
          # securityContext:
          #   privileged: true
          image: image-registry.openshift-image-registry.svc:5000/openshift-bcgov-cerberus/cerberus:latest
          command: ["/bin/sh", "-c"]
          args: ["/usr/local/bin/entrypoint.sh"]
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: '1'
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - mountPath: "/tmp/kubeconfig-template"
              subPath: kubeconfig-template
              name: kubeconfig
            - mountPath: "/tmp/cerberus-config-template.yaml"
              subPath: cerberus-config-template.yaml
              name: cerberus-config
            # - mountPath: "/usr/local/bin/custom_checks/custom_checks.py"
            #   subPath: custom_checks.py
            #   name: cerberus-custom-check
            - mountPath: /tmp/data
              name: cerberus-storage
      volumes:
        - name: kubeconfig
          configMap:
            name: kube-config
        - name: cerberus-config
          configMap:
            name: cerberus-config
        # Add custom check as configmap:
        # - name: cerberus-custom-check
        #   configMap:
        #     name: cerberus-custom-check
        - name: cerberus-storage
          persistentVolumeClaim:
            claimName: cerberus-storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cerberus-storage
  namespace: openshift-bcgov-cerberus
  labels:
    app: cerberus
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: cerberus-service
  namespace: openshift-bcgov-cerberus
  labels:
    app: cerberus
spec:
  type: NodePort
  selector:
    tool: Cerberus
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30000
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: cerberus-service
  namespace: openshift-bcgov-cerberus
  labels:
    app: cerberus
spec:
  port:
    targetPort: 8080
  to:
    kind: Service
    name: cerberus-service
    weight: 100
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
