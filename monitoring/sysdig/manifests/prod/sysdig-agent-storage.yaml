apiVersion: v1
data:
  dragent.yaml: |-
    ### Agent tags
    # tags: linux:ubuntu,dept:dev,local:nyc
    tags: cluster:openshift,env:prod,datacenter:kamloops,region:storage

    #### Sysdig Software related config ####
    # Agent Log priority
    log:
      file_priority: info
      console_priority: warning

    # Watchdog config (prod only)
    watchdog:
      max_memory_usage_mb: 1024
      max_memory_usage_subprocesses:
        sdchecks: 128
        sdjagent: 256
        mountedfs_reader: 32
        statsite_forwarder: 32
        cointerface: 1024

    # Sysdig collector address
    collector: collector-static.sysdigcloud.com

    # Collector TCP port
    collector_port: 6443

    # Whether collector accepts ssl
    ssl: true

    # collector certificate validation
    ssl_verify_certificate: true

    #######################################
    new_k8s: true
    k8s_cluster_name: pathfinder

    ### Prometheus
    prometheus:
      enabled: true
      interval: 30
      timeout: 5
      log_errors: true
      max_metrics: 3000
      max_metrics_per_process: 2000
      max_tags_per_metric: 200
      histograms: false

      # Filtering processes to scan. Processes not matching a rule will not
      # be scanned
      # If an include rule doesn't contain a port or port_filter in the conf
      # section, we will scan all the ports that a matching process is listening to.
      process_filter:
        - exclude:
            process.name: docker-proxy
        - exclude:
            container.image: sysdig/agent
        # special rule to exclude processes matching configured prometheus appcheck
        - exclude:
            appcheck.match: prometheus
        - include:
            container.label.io.prometheus.scrape: "true"
            conf:
                # Custom path definition
                # If the label doesn't exist we'll still use "/metrics"
                path: "{container.label.io.prometheus.path}"

                # Port definition
                # - If the label exists, only scan the given port.
                # - If it doesn't, use port_filter instead.
                # - If there is no port_filter defined, skip this process
                port: "{container.label.io.prometheus.port}"
                port_filter:
                    - exclude: [9092,9200,9300]
                    - include: 9090-9500
                    - include: [9913,9984,24231,42004]
        - exclude:
            container.label.io.prometheus.scrape: "false"
        - include:
            kubernetes.pod.annotation.prometheus.io/scrape: true
            conf:
                path: "{kubernetes.pod.annotation.prometheus.io/path}"
                port: "{kubernetes.pod.annotation.prometheus.io/port}"
        - exclude:
            kubernetes.pod.annotation.prometheus.io/scrape: false
        - include:
            kubernetes.service.annotation.prometheus.io/scrape: true
            conf:
                path: "{kubernetes.service.annotation.prometheus.io/path}"
                port: "{kubernetes.service.annotation.prometheus.io/port}"
        - exclude:
            kubernetes.service.annotation.prometheus.io/scrape: false
        - include:
            kubernetes.pod.label.app: "kube-state-metrics"
            conf:
                host: kube-state-metrics.openshift-monitoring.svc
                port: 8443
                use_https: true
                auth_token_path: "/run/secrets/kubernetes.io/serviceaccount/token"
        #- include:
        #    kubernetes.pod.label.app: "node-exporter"
        #    conf:
        #        host: localhost
        #        port: 9100
        #        use_https: true
        #        auth_token_path: "/run/secrets/kubernetes.io/serviceaccount/token"
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"dragent.yaml":"### Agent tags\n# tags: linux:ubuntu,dept:dev,local:nyc\ntags: cluster:openshift,env:prod,datacenter:kamloops,region:storage\n\n#### Sysdig Software related config ####\n# Agent Log priority\nlog:\n  file_priority: info\n  console_priority: warning\n\n# Watchdog config (prod only)\nwatchdog:\n  max_memory_usage_mb: 1024\n  max_memory_usage_subprocesses:\n    sdchecks: 128\n    sdjagent: 256\n    mountedfs_reader: 32\n    statsite_forwarder: 32\n    cointerface: 1024\n\n# Sysdig collector address\ncollector: collector-static.sysdigcloud.com\n\n# Collector TCP port\ncollector_port: 6443\n\n# Whether collector accepts ssl\nssl: true\n\n# collector certificate validation\nssl_verify_certificate: true\n\n#######################################\nnew_k8s: true\nk8s_cluster_name: pathfinder\n\n### Prometheus\nprometheus:\n  enabled: true\n  interval: 10\n  log_errors: true\n  max_metrics: 3000\n  max_metrics_per_process: 2000\n  max_tags_per_metric: 200\n  histograms: false\n\n  # Filtering processes to scan. Processes not matching a rule will not\n  # be scanned\n  # If an include rule doesn't contain a port or port_filter in the conf\n  # section, we will scan all the ports that a matching process is listening to.\n  process_filter:\n    - exclude:\n        process.name: docker-proxy\n    - exclude:\n        container.image: sysdig/agent\n    # special rule to exclude processes matching configured prometheus appcheck\n    - exclude:\n        appcheck.match: prometheus\n    - include:\n        container.label.io.prometheus.scrape: \"true\"\n        conf:\n            # Custom path definition\n            # If the label doesn't exist we'll still use \"/metrics\"\n            path: \"{container.label.io.prometheus.path}\"\n\n            # Port definition\n            # - If the label exists, only scan the given port.\n            # - If it doesn't, use port_filter instead.\n            # - If there is no port_filter defined, skip this process\n            port: \"{container.label.io.prometheus.port}\"\n            port_filter:\n                - exclude: [9092,9200,9300]\n                - include: 9090-9500\n                - include: [9913,9984,24231,42004]\n    - exclude:\n        container.label.io.prometheus.scrape: \"false\"\n    - include:\n        kubernetes.pod.annotation.prometheus.io/scrape: true\n        conf:\n            path: \"{kubernetes.pod.annotation.prometheus.io/path}\"\n            port: \"{kubernetes.pod.annotation.prometheus.io/port}\"\n    - exclude:\n        kubernetes.pod.annotation.prometheus.io/scrape: false\n    - include:\n        kubernetes.service.annotation.prometheus.io/scrape: true\n        conf:\n            path: \"{kubernetes.service.annotation.prometheus.io/path}\"\n            port: \"{kubernetes.service.annotation.prometheus.io/port}\"\n    - exclude:\n        kubernetes.service.annotation.prometheus.io/scrape: false\n    - include:\n        kubernetes.pod.label.app: \"kube-state-metrics\"\n        conf:\n            host: kube-state-metrics.openshift-monitoring.svc\n            port: 8443\n            use_https: true\n            auth_token_path: \"/run/secrets/kubernetes.io/serviceaccount/token\"\n    #- include:\n    #    kubernetes.pod.label.app: \"node-exporter\"\n    #    conf:\n    #        host: localhost\n    #        port: 9100\n    #        use_https: true\n    #        auth_token_path: \"/run/secrets/kubernetes.io/serviceaccount/token\""},"kind":"ConfigMap","metadata":{"annotations":{},"name":"sysdig-agent-storage","namespace":"devops-sysdig"}}
  creationTimestamp: null
  name: sysdig-agent-storage
  selfLink: /api/v1/namespaces/devops-sysdig/configmaps/sysdig-agent-storage
