# This collection of tasks will patch/update an existing Aporeto
# `networkaccesspolicies` policy.
# Variables
#   - policy_id
#   - pol_uuid
#   - k8s_uuid
#   - apo_namespace
#   - netpol_spec
# Sets
#   - policy_id
- set_fact:
    data: "{{ data|default({}) | combine( {item.variable: item.value} ) }}"
  with_items:
  # Incremental updates are not possible as of 2019/09/10; all properties present
  # during the create must be exist during the update.
  - variable: name
    value: "inter-ns-network-{{ pol_uuid }}"
  - variable: description
    value: "{{ netpol_spec.description | replace('\n', ' ') }}"
  - variable: associatedTags
    value:
      - k8s-uuid={{ k8s_uuid }}
  - variable: object
    value: 
      - - "$namespace={{ netpol_spec.destination }}"
  - variable: subject
    value:
      - - "$namespace={{ netpol_spec.source }}"
- name: Debug - extracted variables
  debug: 
    msg: "apoctl data = {{ data }}"
- name: Debug - policy id 
  debug: 
    msg: "blarb = {{ netpol_spec }}"
- name: Patch policy
  when: data is defined and apo_namespace is defined
  shell: | 
    /usr/local/bin/apoctl \
    api update networkaccesspolicies "{{ policy_id }}" \
    --namespace "{{ apo_namespace }}" \
    -d '{{ data | to_json }}'
  register: output
- name: Debug - policy id 
  debug: 
    msg: "Patching policy with ID {{ output.stdout }}"
- name: Extract policy id
  when: output.stdout != ""
  set_fact:
    policy_id: "{{ output.stdout }}"