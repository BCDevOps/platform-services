- hosts: localhost
  gather_facts: no
  vars:
    k8s_message_key: _secops_pathfinder_gov_bc_ca_networksecuritypolicy
  tasks:
    - import_role:
        name: "networksecuritypolicy"
    - name: Debug Information 
      debug: 
        msg: "myvars = {{ hostvars[inventory_hostname] }}"
    - name: Generate policy ID
      command: openssl rand -base64 6
      register: polid_cmd
    - name: Extract variables
      set_fact:
        pol_uid: "{{ polid_cmd.stdout }}"
        metadata: "{{ hostvars[inventory_hostname][k8s_message_key].metadata }}"
        spec: "{{ hostvars[inventory_hostname][k8s_message_key].spec }}"
    - name: Debug - extracted variables
      debug: 
        msg: "Policy ID: {{ pol_uid }}"
    - name: Create import values file
      copy:
        content: |
          Description: "{{  spec.description | replace('\n', '') }}"
          ID: {{ pol_uid }}
          UUID: {{  metadata.uid  }}
          Mode: IncomingTraffic
          Subject: {{  spec.source  }}
          Object: {{  spec.destination  }}
        dest: /tmp/values-{{ pol_uid }}.yaml
    - name: Check template file exists
      stat:
        path: ./templates/inter-ns-network.yaml
      register: template_file
    - name: Check values file exists
      stat:
        path: /tmp/values-{{ pol_uid }}.yaml
      register: values_file   
    - name: Create policy
      when: template_file.stat.exists and values_file.stat.exists
      shell: |
        /usr/local/bin/apoctl \
        api import \
        --namespace /bcgov-devex/lab \
        --file ./templates/inter-ns-network.yaml \
        --values "/tmp/values-{{ pol_uid }}.yaml"
    - name: Clean values file
      file:
        state: absent
        path: "/tmp/values-{{ pol_uid }}.yaml"