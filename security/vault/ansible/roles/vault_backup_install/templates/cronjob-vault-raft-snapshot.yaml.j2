apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ vault_install_ocp_namespace }}-backup
  namespace: {{ vault_install_ocp_namespace }}
spec:
  concurrencyPolicy: Forbid
  schedule: "{{ vault_backup_install_cron_schedule }}" # Replace with Hourly Backups
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            vault.hashicorp.com/agent-inject: "true"
            vault.hashicorp.com/agent-inject-token: "true"
            vault.hashicorp.com/agent-pre-populate-only: "true"
            # vault.hashicorp.com/tls-secret: "vault-tls"
            # vault.hashicorp.com/ca-cert: "/vault/tls/vault.ca"
            # vault.hashicorp.com/namespace: "platform-services"
            vault.hashicorp.com/auth-path: "auth/k8s-klab"
            vault.hashicorp.com/role: "backup"
        spec:
          concurrencyPolicy: Forbid
          containers:
          - name: vault
            image: vault:{{ vault_install_version }}
            command:
              - "/bin/sh"
              - "-c"
            args:
              # Only Keep Backups for 10 Days
              # Always Backup even if certificates are expired
              - find /backup -mtime +10 -type f -delete;
                export VAULT_TOKEN=$(cat /vault/secrets/token);
                vault operator raft snapshot save -tls-skip-verify /backup/raft-$(date +%Y-%m-%d_%H%M%S).snap;
            env:
              - name: VAULT_ADDR
                value: "https://vault-active:8200"
              #- name: VAULT_TOKEN
              #  value: "{{ vault_backup_install_token }}"
            volumeMounts:
              - name: {{ vault_install_ocp_namespace }}-cronjob
                mountPath: /backup
          restartPolicy: OnFailure
          volumes:
          - name: {{ vault_install_ocp_namespace }}-cronjob
            persistentVolumeClaim:
              claimName: {{ vault_install_ocp_namespace }}-pv-claim
