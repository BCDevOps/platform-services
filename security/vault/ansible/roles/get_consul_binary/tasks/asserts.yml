---
# File: asserts.yml - Asserts for this playbook

- name: Check distribution compatibility
  fail:
    msg: "{{ ansible_distribution }} is not currently supported by this role."
  when:
    - ansible_distribution not in ['RedHat', 'CentOS', 'OracleLinux', 'Fedora', 'Debian', 'FreeBSD', 'SmartOS', 'Ubuntu', 'Archlinux', 'Alpine', 'Amazon', 'MacOSX']
    - ansible_os_family != 'Windows'

- name: Check CentOS, Red Hat or Oracle Linux version
  fail:
    msg: "{{ ansible_distribution_version }} is not a supported version."
  when:
    - ansible_distribution in ['RedHat', 'CentOS', 'OracleLinux']
    - ansible_distribution_version is version_compare(6, '<')

- name: Check Debian version
  fail:
    msg: "{{ ansible_distribution_version }} is not a supported version."
  when:
    - ansible_distribution == "Debian"
    - (ansible_distribution_version != 'buster/sid') and (ansible_distribution_version is version_compare(8, '<'))

- name: Check FreeBSD version
  fail:
    msg: "{{ ansible_distribution_version }} is not a supported version."
  when:
    - ansible_distribution == "FreeBSD"
    - ansible_distribution_version is version_compare(10, '<')

- name: Check Ubuntu version
  fail:
    msg: "{{ ansible_distribution_version }} is not a supported version."
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version_compare(13.04, '<')

# Check for unzip binary

- name: Check if unzip is installed on control host
  shell: "command -v unzip -h >/dev/null 2>&1"
  become: false
  changed_when: false
  check_mode: false
  run_once: true
  register: is_unzip_installed
  ignore_errors: true
  delegate_to: 127.0.0.1

- name: Install remotely if unzip is not installed on control host
  set_fact:
    consul_install_remotely: true
  when:
    - is_unzip_installed.rc == 1
