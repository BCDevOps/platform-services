APIVersion: 1
{#
    The `label` field is used by the import routine to determine the
    uniqueness of an object. If the label is unique it will create
    new objects; if the label matches an existing import it will
    update / replace existing objects.
#}
label: "{{ import_label }}" 
data:
  networkaccesspolicies:
{# 
    The NetworkSecurityPolicy name is built from a hard-coded prefix
    combined with the k8s object name derrived from the `metadata.name`
    field. This allows for operations to quickly correlate the k8s object
    with the Aporeto policy.
#}
  - name: {{ policy_name }}
    description: {{ description | replace('\n', ' ') }}
    action: {{ action | default("Allow") }}
    propagate: true
    logsEnabled: true
{#
    Process `source` to `subject` properties
#}
    subject:
{% for items in source %}
{% for i in items %}
{# 
    If any item represents a namespace we need to make sure
    that it represents a fully qualified namespace.
#}
{% if '$namespace' in i %}
{% set value = i.split('=')[1] %}
{% if aporeto_base_namespace not in value %}
{# String leading character so we can join later #}
{% if value.startswith('/') %}
{% set value = value[1:] %}
{% endif %}
{# Rebuild the namespace property #}
{% set i = '$namespace=' + aporeto_base_namespace + '/' + value %}
{% endif %}
{% endif %}
{# 
    The first item needs to be preceeded with two dashes `- -` while
    subsaquent items need only a single dash `-`; this groups them in
    a logical AND.
#}
{% if loop.index == 1 %}
    - - "{{ i }}"
{% else %}
      - "{{ i }}"
{% endif %}
{% endfor %}
{% endfor %}
{#
    Process `destination` to `object` properties
#}
    object:
{% for items in destination %}
{% for j in items %}
{# 
    If any item represents a namespace we need to make sure
    that it represents a fully qualified namespace.
#}
{% if '$namespace' in j %}
{% set value = j.split('=')[1] %}
{% if aporeto_base_namespace not in value %}
{# String leading character so we can join later #}
{% if  value.startswith('/') %}
{% set value = value[1:] %}
{% endif %}
{# Rebuild the namespace property #}
{% set j = '$namespace=' + aporeto_base_namespace + '/' + value %}
{% endif %}
{% endif %}
{# 
    The first item needs to be preceeded with two dashes `- -` while
    subsaquent items need only a single dash `-`; this groups them in
    a logical AND.
#}
{% if loop.index == 1 %}
    - - "{{ j }}"
{% else %}
      - "{{ j }}"
{% endif %}
{% endfor %}
{% endfor %}
    associatedTags:
    - uuid={{ import_label }}
