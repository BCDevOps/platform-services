apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: aporeto-enforcer
  name: aporeto-enforcer
  namespace: kube-system
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: aporeto-enforcer
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: aporeto-enforcer
    spec:
      containers:
        - args:
            - '-c'
            - sleep 10; exec /enforcerd
          command:
            - /bin/sh
          env:
            - name: ENFORCERD_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: enforcerd.log_level
                  name: aporeto-cm
            - name: ENFORCERD_LOG_FORMAT
              valueFrom:
                configMapKeyRef:
                  key: enforcerd.log_format
                  name: aporeto-cm
            - name: ENFORCERD_LOG_LEVEL_REMOTE
              valueFrom:
                configMapKeyRef:
                  key: enforcerd.log_level
                  name: aporeto-cm
            - name: ENFORCERD_API_CACERT
              valueFrom:
                configMapKeyRef:
                  key: enforcerd.cacert
                  name: aporeto-cm
            - name: ENFORCERD_LOG_TO_CONSOLE
              valueFrom:
                configMapKeyRef:
                  key: enforcerd.log_to_console
                  name: aporeto-cm
            - name: ENFORCERD_API
              valueFrom:
                configMapKeyRef:
                  key: aporeto.cid_url
                  name: aporeto-cm
          image: 'aporeto/enforcerd:release-3.5.0-r4'
          imagePullPolicy: Always
          name: enforcerd
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/run
              name: dockersock
            - mountPath: /aporetoproc
              name: prochost
            - mountPath: /var/lib/aporeto
              name: shared-data
            - mountPath: /var/lib/registration
              name: certs
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      hostPID: true
      initContainers:
        - args:
            - register
          command:
            - /enforcerd
          env:
            - name: ENFORCERD_API
              valueFrom:
                configMapKeyRef:
                  key: aporeto.cid_url
                  name: aporeto-cm
            - name: ENFORCERD_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: enforcerd.log_level
                  name: aporeto-cm
            - name: ENFORCERD_SQUALL_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  key: enforcerd.namespace
                  name: aporeto-cm
            - name: ENFORCERD_LOG_TO_CONSOLE
              valueFrom:
                configMapKeyRef:
                  key: enforcerd.log_to_console
                  name: aporeto-cm
            - name: ENFORCERD_LOG_FORMAT
              valueFrom:
                configMapKeyRef:
                  key: enforcerd.log_format
                  name: aporeto-cm
            - name: ENFORCERD_TAG
              valueFrom:
                configMapKeyRef:
                  key: enforcerd.tag
                  name: aporeto-cm
            - name: ENFORCERD_REGISTRATION_CERT
              valueFrom:
                configMapKeyRef:
                  key: enforcerd.registration_cert
                  name: aporeto-cm
            - name: ENFORCERD_REGISTRATION_CERT_KEY
              valueFrom:
                configMapKeyRef:
                  key: enforcerd.registration_cert_key
                  name: aporeto-cm
            - name: ENFORCERD_API_CACERT
              valueFrom:
                configMapKeyRef:
                  key: enforcerd.cacert
                  name: aporeto-cm
            - name: ENFORCERD_FORCE
              valueFrom:
                configMapKeyRef:
                  key: enforcerd.force_register
                  name: aporeto-cm
          image: 'aporeto/enforcerd:release-3.5.0-r4'
          imagePullPolicy: Always
          name: registerer
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/aporeto
              name: shared-data
            - mountPath: /var/lib/registration
              name: certs
      nodeSelector:
        aporeto-enforcer: 'true'
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kube-squall-account
      serviceAccountName: kube-squall-account
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: shared-data
        - hostPath:
            path: /proc
            type: ''
          name: prochost
        - hostPath:
            path: /var/run
            type: ''
          name: dockersock
        - name: certs
          secret:
            defaultMode: 420
            secretName: aporeto-secrets
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate

