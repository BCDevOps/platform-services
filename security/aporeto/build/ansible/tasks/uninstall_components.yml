---
- name: Remove components with Helm Template
  block: 
    - name: Label nodes to disable enforcers
      shell: oc label node {{ item }} aporeto-enforcerd=false --overwrite=true
      with_items: 
        - "{{ node_list }}"
      ignore_errors: true
    - name: Add the helm repo
      command: "helm repo add {{ helm_repo_name }} {{ aporeto_repo }}"

    - name: Fetch helm charts for enforcers
      command: "helm fetch aporeto/enforcerd"
    - name: Use Helm Template to delete OpenShift Objects
      shell: "helm template enforcerd-*.tgz \
      --namespace {{ openshift_project_prefix }}-enforcers \
      | oc delete -f - -n {{ openshift_project_prefix }}-enforcers "
      ignore_errors: true

    - name: Disable Aporeto operator syncing
      command: "oc annotate namespace {{ openshift_project_prefix }}-enforcers aporeto.io/disable-aporeto-ctrls='true' --overwrite"
      ignore_errors: true


    - name: Remove all custom resources created by the Aporeto Operator
      shell: "for crd in $(oc api-resources --api-group=api.aporeto.io -o name); do oc delete $crd -n {{ openshift_project_prefix }}-enforcers --all ; done"

    - name: Validate that no resources are left 
      shell: "for crd in $(oc api-resources --api-group=api.aporeto.io -o name); do oc get $crd --all-namespaces -o name; done"

    - name: get list of projects and custom resources 
      shell: "for crd in $(oc api-resources --api-group=secops.pathfinder.gov.bc.ca -o name); do oc get $crd --all-namespaces -o custom-columns=KIND:.kind,NAME:.metadata.name,NAMESPACE:.metadata.namespace --no-headers; done "
      register: crd_output

    - name: patch crds and remove object
      shell: "oc patch {{ item.split()[0] | lower }}/{{ item.split()[1] }} -p '{\"metadata\":{\"finalizers\":[]}}' --type=merge -n {{ item.split()[2] }} && oc delete {{ item.split()[0] | lower }}/{{ item.split()[1] }} -n {{ item.split()[2] }}"
      with_items: 
       - "{{ crd_output.stdout_lines }}"

    - name: Validate that no resources are left 
      shell: "for cr in $(oc api-resources --api-group=secops.pathfinder.gov.bc.ca -o name); do oc get $cr --all-namespaces -o name; done"

    - name: Remove all BCGov SecOps CRDs
      shell: "kubectl delete -f files/bcgov-networksecuritypolicy-operator/crds/definition.yaml"
      ignore_errors: true         #errors show up even though the resources are removed successfully

    - name: Fetch helm charts for aporeto-operator
      command: "helm fetch aporeto/aporeto-operator"
    - name: Use Helm Template to delete OpenShift Objects
      shell: "helm template aporeto-operator-*.tgz \
        --name aporeto-operator \
        --namespace {{ openshift_project_prefix }}-operator --set options.baseNamespace={{ openshift_project_prefix }}-enforcers \
        | oc delete -f - -n {{ openshift_project_prefix }}-operator"
      ignore_errors: true

  
    - name: Fetch helm charts for aporeto-crds
      command: "helm fetch aporeto/aporeto-crds"
    - name: Use Helm Template to delete OpenShift Objects
      shell: "helm template aporeto-crds-*.tgz | oc delete -f - "
      ignore_errors: true

    - name: Remove OpenShift Projects
      command: "oc delete project {{ openshift_project_prefix }}-enforcers {{ openshift_project_prefix }}-operator"

